name: CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  S3_BUCKET_NAME: dawheen-build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    
    - uses: actions/checkout@v4

    - name: Clean up existing project directory
      run: rm -rf /home/runner/work/DAWHEEN/DAWHEEN/dawheen_backend
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - run: touch ./dawheen_backend/src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" > ./dawheen_backend/src/main/resources/application.properties
    - run: cat ./dawheen_backend/src/main/resources/application.properties
    - run: touch ./dawheen_backend/src/main/resources/application-oauth.properties
    - run: echo "${{ secrets.APPLICATION_OAUTH }}" > ./dawheen_backend/src/main/resources/application-oauth.properties
    - run: cat ./dawheen_backend/src/main/resources/application-oauth.properties
    - run: mkdir ./dawheen_backend/src/main/resources/
    - run: touch ./dawheen_backend/src/test/resources/application.properties
    - run: echo "${{ secrets.APPLICATION_TEST }}" > ./dawheen_backend/src/test/resources/application.properties

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      
    - run: gradle init
      working-directory: dawheen_backend

    - run: chmod +x ./gradlew
      working-directory: dawheen_backend

    - name: Build with Gradle Wrapper
      run: ./gradlew build
      working-directory: dawheen_backend

    - name: Make zip file
      run: zip -r ./dawheen.zip ./dawheen_backend
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./dawheen.zip s3://$S3_BUCKET_NAME/dawheen.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name dawheen
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name dawheen-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=dawheen.zip
