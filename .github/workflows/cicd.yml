name: Docker CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  S3_BUCKET_NAME: dawheen-build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: change application.yml
      run: COPY ./src/main/resources/application-docker.properties ./src/main/resources/application.properties
      shell: bash
      working-directory: dawheen_backend

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - run: gradle init
    
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - run: gradle init

    - run: chmod +x ./gradlew
      working-directory: dawheen_backend

    - name: Build with Gradle Wrapper
      run: ./gradlew build
      working-directory: dawheen_backend
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      working-directory: dawheen_backend

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려온다.
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./dawheen.zip s3://$S3_BUCKET_NAME/dawheen.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name dawheen
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name dawheen-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=dawheen.zip
